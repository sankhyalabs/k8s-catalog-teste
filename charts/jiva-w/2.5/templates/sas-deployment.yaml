apiVersion: apps/v1
kind: Deployment
metadata:
  name: sas
  generation: 1
  labels:
    io.kompose.service: sas
spec:
  replicas: 1
  selector:
      matchLabels:
        io.kompose.service: sas
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
      {{- range $key, $value := .Values.annotations }}
        {{ $key }}: {{ $value }}
      {{- end }}
      labels:
        io.kompose.service: sas
    spec:
      containers:
      - name: sas
        image: {{  .Values.imageRepository.sas.image }}:{{  .Values.imageRepository.sas.imageTag }}
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh", "-c"]
        args:
        - sudo chown -R mgeweb:mgeweb  /home/mgeweb/pacotes-sas/ /tmp/ && java -jar /opt/DSM/docker-sas-manager.jar /SAS && sleep 5 && tar -xzf /tmp/SAS.tar.gz -C /tmp/ &&  sudo chown -R mgeweb:mgeweb /tmp/ /opt/SAS/* && sleep 5  && /opt/DSM/scripts/./run-sas.sh && sleep 10 && tail -f /opt/SAS/log/server*.log
        env:
        - name: JAVA_TOOL_OPTIONS
          value: "{{ .Values.jboss.envs }}"
        - name: HASDELPHI
          value: "{{ .Values.sasdelphi.enabled }}"
        - name: CLIENTE
          value: "{{ .Release.Namespace }}"
        - name: PORTA_BD_JIVAW
          value: "{{ .Values.banco.porta }}"
        - name: SID_BD_JIVAW
          value: "{{ .Values.banco.sid }}"
        - name: TIPO_BD
          value: "{{ .Values.banco.tipo }}"
        - name: IP_BD_JIVAW
          valueFrom:
            secretKeyRef:
              name: jiva-w
              key: banco-ip
        - name: SENHA_BD_JIVAW
          valueFrom:
            secretKeyRef:
              name: jiva-w
              key: banco-password
        - name: USUARIO_BD_JIVAW
          valueFrom:
            secretKeyRef:
              name: jiva-w
              key: banco-user
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 30
          successThreshold: 1
          tcpSocket:
            port: 10050
          timeoutSeconds: 6
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 30
          successThreshold: 1
          tcpSocket:
            port: 10050
          timeoutSeconds: 6
        resources:
          limits:
            memory: {{ .Values.memoria.sas.maximo }}Mi
            cpu:  {{ .Values.cpu.sas.maximo }}
          requests:
            memory: {{ .Values.memoria.sas.media }}Mi
            cpu: {{ .Values.cpu.sas.media }}
        volumeMounts:
        - mountPath: /home/mgeweb/pacotes-sas/
          name: volume-pacotesas
        - mountPath: /opt/SAS/licenca
          name: volume-sas
      dnsConfig:
        options:
        - name: ndots
          value: "15"
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 0
      volumes:
      - name: volume-sas
        hostPath: 
          path: /home/mgeweb/compartilhado/{{ .Release.Namespace }}/sas/
          type: DirectoryOrCreate
      - name: volume-pacotesas
        hostPath: 
          path: /home/mgeweb/compartilhado/pacotesas/
          type: DirectoryOrCreate
status: {}
