apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: sas
  generation: 1
  labels:
    io.kompose.service: sas
spec:
  replicas: 1
  selector:
      matchLabels:
        io.kompose.service: sas
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
      {{- range $key, $value := .Values.annotations }}
        {{ $key }}: {{ $value }}
      {{- end }}
      labels:
        io.kompose.service: sas
    spec:
      containers:
      - name: sas
        image: {{  .Values.imageRepository.sas.image }}:{{  .Values.imageRepository.sas.imageTag }}
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh", "-c"]
        args:
        - sudo chown -R mgeweb:mgeweb  /home/mgeweb/pacotes-sas/ /tmp/ && java -jar /opt/DSM/docker-sas-manager.jar /SAS && sleep 5 && tar -xzf /tmp/SAS.tar.gz -C /tmp/ &&  sudo chown -R mgeweb:mgeweb /tmp/ /opt/SAS/* && sleep 5  && /opt/DSM/scripts/./run-sas.sh && sleep 2 && tail -f /opt/SAS/log/server*.log
        env: 
        - name: HASDELPHI
          value: "{{ .Values.sasdelphi.enabled }}"
        - name: IP_BD_SNKW
          value: "{{ .Values.banco.ip }}"
        - name: PORTA_BD_SNKW
          value: "{{ .Values.banco.porta }}"
        - name: SENHA_BD_SNKW
          value: "{{ .Values.banco.senha }}"
        - name: SID_BD_SNKW
          value: "{{ .Values.banco.sid }}"
        - name: TIPO_BD
          value: "{{ .Values.banco.tipo }}"
        - name: USUARIO_BD_SNKW
          value: "{{ .Values.banco.usuario }}"
        livenessProbe:
          failureThreshold: 2
          initialDelaySeconds: 30
          periodSeconds: 6
          successThreshold: 1
          tcpSocket:
            port: 10050
          timeoutSeconds: 6
        readinessProbe:
          failureThreshold: 2
          initialDelaySeconds: 30
          periodSeconds: 6
          successThreshold: 1
          tcpSocket:
            port: 10050
          timeoutSeconds: 6
        volumeMounts:
        - mountPath: /home/mgeweb/pacotes-sas/
          name: volume-claim
          subPath: pacotes/sas
        - mountPath: /opt/SAS/licenca
          name: volume-claim
          subPath: {{ .Release.Namespace }}/SAS/
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 0
      volumes:
      - name: volume-claim
        persistentVolumeClaim:
          claimName: volume-claim
status: {}
