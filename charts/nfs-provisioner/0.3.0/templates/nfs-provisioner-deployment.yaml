apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "nfs-provisioner.fullname" . }}
  labels:
    app: {{ template "nfs-provisioner.name" . }}
    chart: {{ template "nfs-provisioner.chart" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  progressDeadlineSeconds: 600
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: {{ template "nfs-provisioner.name" . }}
      release: {{ .Release.Name }}
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ template "nfs-provisioner.name" . }}
        chart: {{ template "nfs-provisioner.chart" . }}
        heritage: {{ .Release.Service }}
        release: {{ .Release.Name }}
    spec:
      containers:
      - args:
        - "-provisioner={{ template "nfs-provisioner.provisionerName" . }}"
        env:
        - name: SERVICE_NAME
          value: {{ template "nfs-provisioner.fullname" . }}
        - name: POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: {{ .Chart.Name }}
        ports:
        - containerPort: 2049
          name: nfs
          protocol: TCP
        - containerPort: 20048
          name: mountd
          protocol: TCP
        - containerPort: 111
          name: rpcbind-tcp
          protocol: TCP
        - containerPort: 111
          name: rpcbind-udp
          protocol: UDP
        resources: {}
        securityContext:
          capabilities:
            add:
            - DAC_READ_SEARCH
            - SYS_RESOURCE
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /export
          name: data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      securityContext: {}
      serviceAccount: {{ if .Values.rbac.create }}{{ template "nfs-provisioner.fullname" . }}{{ else }}{{ .Values.rbac.serviceAccountName | quote }}{{ end }}
      serviceAccountName: {{ if .Values.rbac.create }}{{ template "nfs-provisioner.fullname" . }}{{ else }}{{ .Values.rbac.serviceAccountName | quote }}{{ end }}
      terminationGracePeriodSeconds: 100
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: nfs-volume-claim
status: {}
